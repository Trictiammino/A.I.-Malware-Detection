import functions

# path del file
Train_X_path = "dataset/EmberXTrain.csv"

# caricamento del file
X = functions.load(Train_X_path)
print("\nDataset:\n", X)

# descrizione del dataset secondo variabili statistiche
X_described = functions.pre_elaboration_data(X)
print("Descrizione dei dati:\n", X_described)

# contatore delle colonne eliminate dal dataset
i = 0

# settaggio valori delle soglie
std_threshold = 0.05
iqr_threshold = 0.05
count_threshold = 7200

# ciclo per l'esclusione delle colonne del dataset in base ai valori: min, max, std, IQR, count
for column in X_described:

    # selezione dei valori
    min = X_described.iloc[3][column]
    max = X_described.iloc[7][column]
    std = X_described.iloc[2][column]
    first_quartil = X_described.iloc[4][column]
    third_quartil = X_described.iloc[6][column]

    # numero di valori non mancanti
    count = X_described.iloc[0][column]

    # inter quartile range (75% - 25%)
    iqr = third_quartil - first_quartil

    # verifica delle condizioni per l'esclusione delle colonne
    if min == max or std < std_threshold or iqr < iqr_threshold or count < count_threshold:
        i += 1  # incremento contatore delle colonne eliminate
        X = X.drop(columns=[column])  # esclusione colonna

print("\nGli attributi eliminati sono: ", i)
print("\nDataset filtrato:\n", X)

# salvataggio del dataset filtrato come file .csv
print("\nSalvando il dataset filtrato come 'X_filtered' nella cartella 'dataset'...")
X.to_csv("dataset/X_filtered.csv", index=False)
print("\nSalvando il dataset filtrato come 'X_filtered' nella cartella 'dataset'... completato!")